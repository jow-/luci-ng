{
  "widget": "set-page",
  "waitFor": "uci.loadConfig('system') && ( system0 = uci.configs.system['@system'][0] )",
  "content": [
    {
      "widget": "set-section",
      "options": { "title": "General" },
      "content": "uciUI('system', '@system', 0, 'hostname')"
    },
    {
      "widget": "set-section",
      "options": { "title": "Time & Date" },
      "content": "load('views/system/system.time.json')"
    },
    {
      "widget": "set-section",
      "options": {
        "title": "Administration"
      },
      "content": [
        {
          "widget": "set-popup",
          "options": {
            "title": "Password",
            "description": "Changes the administrator password for accessing the device",
            "popupTitle": "Change Password"
          },
          "content": "load('views/system/system.psw.json')"
        },
        {
          "widget": "set-expansion",
          "displayIf": "ubus('file', 'stat', {path:'/etc/config/dropbear'}, { 0: null } )",
          "waitFor": "uci.loadConfig('dropbear')",
          "options": {
            "title": "SSH Access",
            "description=": "`${uci.configs.dropbear['@dropbear'].length} instances`"
          },
          "content": "load('views/system/system.dropbear.json')"
        },
        {
          "widget": "set-button",
          "options": {
            "title": "Restart Device",
            "buttonTitle": "Reboot",
            "onClick": "popupMsg('Are you sure you want to restart the device?') && ubus('luci2.system', 'reboot')"
          }
        }
      ]
    },
    {
      "widget": "set-section",
      "options": {
        "title": "Backup & Upgrade"
      },
      "content": [
        {
          "widget": "set-popup",
          "options": {
            "title": "Firmware",
            "description": "Flash new firmware image",
            "popupTitle": "Flash"
          },
          "content": "load('views/system/system.firmware.json')"
        },
        {
          "widget": "set-button",
          "options": {
            "title": "Backup",
            "description": "Download a tar archive of the current configuration files",
            "buttonTitle": "Generate",
            "onClick": "$tmp.loading=true, cgi.backup() || ($tmp.loading=false)",
            "spinner=": "$tmp.loading"
          }
        },
        {
          "widget": "set-link",
          "options": {
            "title": "Configure",
            "description": "List files/folder to keep & backup",
            "link": "system/backup"
          }
        },
        {
          "widget": "set-expansion",
          "options": {
            "title": "Restore"
          },
          "content": [
            {
              "widget": "set-popup",
              "options": {
                "title": "From backup",
                "description": "Upload a previously generated backup archive",
                "popupTitle": "Restore Backup"
              },
              "content": "load('views/system/system.restore.json')"
            },
            {
              "widget": "set-button",
              "displayIf": "ubus('luci2.system', 'reset_test' ).supported",
              "options": {
                "title": "Restore defaults",
                "description": "Revert to default configuration",
                "buttonTitle": "Reset",
                "onClick": "popupMsg('This will erase all current configuration.\nAre you sure?') && ubus('luci2.system', 'reset_start' )"
              }
            },
            {
              "widget": "set-button",
              "options": {
                "title": "Restore to previous",
                "description": "Revert to previous firmware",
                "buttonTitle": "Rollback"
              }
            }
          ]
        }
      ]
    },
    {
      "widget": "set-section",
      "options": {
        "title": "Programs & Tasks"
      },
      "content": [
        {
          "widget": "set-link",
          "options": {
            "title": "Startup",
            "description": "Manage installed init scripts",
            "link": "system/startup"
          }
        },
        {
          "widget": "set-link",
          "options": {
            "title": "Software",
            "description": "Install & manage programs",
            "link": "system/software"
          }
        },
        {
          "widget": "set-link",
          "options": {
            "title": "Scheduled Tasks",
            "description": "Manage Crontab tasks",
            "link": "system/schedule"
          }
        }
      ]
    },
    {
      "widget": "set-sectiongroup",
      "options": {
        "title": "Advanced"
      },
      "content": [
        {
          "widget": "set-section",
          "options": {
            "title": "Logging"
          },
          "content": [
            {
              "widget": "set-expansion",
              "bind": "system0",
              "options": {
                "title": "System Log"
              },
              "content": [
                "uciUI('system', '@system', 0, 'log_buffer_size')",
                {
                  "widget": "set-expansion",
                  "bind": "system0",
                  "options": {
                    "title": "File Log",
                    "description=": "$model.log_file ? `Logging to ${$model.log_file}` : 'Disabled'"
                  },
                  "content": "uciUI('system', '@system', 0, ['log_file', 'log_size'])"
                },
                {
                  "widget": "set-toggle",
                  "bind": "$model.log_remote",
                  "options": {
                    "title": "Remote Logging",
                    "description": "Log messages to server in addition to the local destination."
                  },
                  "content": "uciUI('system', '@system', 0, ['log_ip', 'log_port', 'log_proto', 'log_hostname', 'log_trailer_null', 'log_prefix'])"
                }
              ]
            },
            {
              "widget": "set-expansion",
              "options": {
                "title": "Kernel Log"
              },
              "content": "uciUI('system', '@system', 0, ['buffersize', 'conloglevel'])"
            },
            {
              "widget": "set-expansion",
              "options": {
                "title": "Cron Log"
              },
              "content": [
                {
                  "widget": "set-toggle",
                  "bind": "$model.start",
                  "onInit": "$model.start = system0.cronloglevel & 1",
                  "onValueChange": "$value ? system0.cronloglevel |= 1 : system0.cronloglevel &= ~1",
                  "options": {
                    "title": "Log Job Start"
                  }
                },
                {
                  "widget": "set-toggle",
                  "bind": "$model.end",
                  "onInit": "$model.end = system0.cronloglevel & 2",
                  "onValueChange": "$value ? system0.cronloglevel |= 2 : system0.cronloglevel &= ~2",
                  "options": {
                    "title": "Log Job End"
                  }
                },
                {
                  "widget": "set-toggle",
                  "bind": "$model.failed",
                  "onInit": "$model.failed = system0.cronloglevel & 4",
                  "onValueChange": "$value ? system0.cronloglevel |= 4 : system0.cronloglevel &= ~4",
                  "options": {
                    "title": "Log Failed Jobs"
                  }
                },
                {
                  "widget": "set-toggle",
                  "bind": "$model.pid",
                  "onInit": "$model.pid = system0.cronloglevel & 8",
                  "onValueChange": "$value ? system0.cronloglevel |= 8 : system0.cronloglevel &= ~8",
                  "options": {
                    "title": "Log PID for all Jobs"
                  }
                }
              ]
            }
          ]
        },
        {
          "widget": "set-section",
          "options": {
            "title": "Leds"
          },
          "displayIf": "ubus('file', 'list', {path:'/sys/class/leds'}, '$.entries', { 0: [] } ).length",
          "content": "uciUI('system', '@led')"
        }
      ]
    }
  ]
}
